# Docker Compose configuration for RAG Ops Framework
version: '3.8'

services:
  # Streamlit application
  app:
    build: .
    container_name: rag-app
    ports:
      - "8501:8501"  # Streamlit UI
      - "8000:8000"  # Prometheus metrics
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-false}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-rag-ops-framework}
    volumes:
      - ./faiss_index:/app/faiss_index:ro  # Mount FAISS index as read-only
      - ./data:/app/data:ro                # Mount data directory as read-only
    restart: unless-stopped
    networks:
      - rag-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: rag-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - rag-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: rag-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - rag-network
    depends_on:
      - prometheus

networks:
  rag-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
