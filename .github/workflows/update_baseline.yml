name: Update Baseline

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-baseline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run evaluation
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          python scripts/run_evaluation.py --output baseline_report.json --judge-model gpt-3.5-turbo
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGCHAIN_TRACING_V2: false

      - name: Commit updated baseline
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update evaluation baseline [skip ci]"
          file_pattern: baseline_report.json
          commit_user_name: GitHub Actions
          commit_user_email: actions@github.com

      - name: Create summary
        if: always()
        run: |
          echo "## ðŸ“Š Baseline Updated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Evaluation completed and baseline updated." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat baseline_report.json | jq -r '
            "### Metrics\n\n" +
            "| Metric | Score |\n" +
            "|--------|-------|\n" +
            (.scores | to_entries[] | "| \(.key) | \(.value) |")
          ' >> $GITHUB_STEP_SUMMARY
